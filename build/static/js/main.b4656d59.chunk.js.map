{"version":3,"sources":["App.js","index.js"],"names":["otCore","OT","require","getQueryString","field","url","href","window","location","string","RegExp","concat","exec","otCoreOptions","credentials","apiKey","sessionId","token","streamContainers","pubSub","type","data","stream","publisher","camera","screen","subscriber","controlsContainer","packages","communication","callProperties","textChat","name","waitingMessage","container","screenSharing","extensionID","annotation","externalWindow","dev","screenProperties","insertMode","width","height","showControls","style","buttonDisplayMode","videoSource","fitMode","absoluteParent","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","connected","active","publishers","started","subscribers","meta","localAudioEnabled","localVideoEnabled","localCam","startCall","bind","assertThisInitialized","endCall","toggleLocalAudio","toggleLocalVideo","switchLocalCamera","_this2","AccCore","connect","then","setState","forEach","event","on","_ref","_this3","_ref2","catch","error","console","log","getDevices","err","devices","message","start","_this$state","_containerClasses","sharingScreen","viewingSharedScreen","activeCameraSubscribers","activeCameraSubscribersGt2","activeCameraSubscribersOdd","screenshareActive","controlClass","classNames","hidden","localAudioClass","muted","localVideoClass","localCameraClass","front","localCallClass","cameraPublisherClass","small","left","screenPublisherClass","cameraSubscriberClass","active-gt2","active-odd","screenSubscriberClass","containerClasses","react_default","a","createElement","className","build_default","onClick","id","Component","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.b4656d59.chunk.js","sourcesContent":["/* Let CRA handle linting for sample app */\nimport React, { Component } from 'react';\nimport Spinner from 'react-spinner';\nimport classNames from 'classnames';\n// import NetworkTest, { ErrorNames } from 'opentok-network-test-js';\nimport AccCore from 'opentok-accelerator-core';\nimport 'opentok-solutions-css';\n// import logo from './assets/images/logo.png';\nimport './App.css';\n\n// const OpenTok = require('opentok');\nconst OT = require('@opentok/client');\n\nlet otCore;\n\nconst getQueryString = (field, url) => {\n    const href = url || window.location.href;\n    const reg = new RegExp(`[?&]${field}=([^&#]*)`, 'i');\n    const string = reg.exec(href);\n    return string ? string[1] : null;\n};\n\nfunction populateDeviceSources() {\n    OT.getDevices((err, devices) => {\n        if (err) {\n            console.log(`getDevices error ${err.message}`);\n            return;\n        }\n\n        // ///////////////////// Working for multi Camera\n        //\n        // const index = 0;\n        // selector.innerHTML = devices.reduce((innerHTML, device) => {\n        //     if (device.kind === kind) {\n        //         index += 1;\n        //         return `${innerHTML}<option value=\"${\n        //             device.deviceId\n        //         }\">${device.label || device.kind + index}</option>`;\n        //     }\n        return devices;\n    }, '');\n}\n\n// OT.getUserMedia().then(() => {\n//     populateDeviceSources(audioSelector, 'audioInput');\n//     populateDeviceSources(videoSelector, 'videoInput');\n// });\n\nconst otCoreOptions = {\n    credentials: {\n        apiKey: 'apiKey',\n        sessionId: 'sessionId',\n        token: 'token'\n    },\n\n    // A container can either be a query selector or an HTML Element\n    streamContainers(pubSub, type, data, stream) {\n        return {\n            publisher: {\n                camera: '#cameraPublisherContainer',\n                screen: '#screenPublisherContainer'\n            },\n            subscriber: {\n                camera: '#cameraSubscriberContainer',\n                screen: '#screenSubscriberContainer'\n            }\n        }[pubSub][type];\n    },\n    controlsContainer: '#controls',\n    packages: ['textChat', 'screenSharing', 'annotation'],\n    communication: {\n        callProperties: null // Using default\n    },\n    textChat: {\n        name: 'default', // eslint-disable-line no-bitwise\n        waitingMessage: 'Messages will be delivered when other users arrive',\n        container: '#chat'\n    },\n    screenSharing: {\n        extensionID: 'plocfffmbcclpdifaikiikgplfnepkpo',\n        annotation: true,\n        externalWindow: false,\n        dev: true,\n        screenProperties: {\n            insertMode: 'append',\n            width: '100%',\n            height: '100%',\n            showControls: false,\n            style: {\n                buttonDisplayMode: 'off'\n            },\n            videoSource: 'window',\n            fitMode: 'contain' // Using default\n        }\n    },\n    annotation: {\n        absoluteParent: {\n            publisher: '.App-video-container',\n            subscriber: '.App-video-container'\n        }\n    }\n};\n\n/**\n * Build classes for container elements based on state\n * @param {Object} state\n */\nconst containerClasses = state => {\n    const {\n        active,\n        meta,\n        localAudioEnabled,\n        localVideoEnabled,\n        localCam\n    } = state;\n    const sharingScreen = meta ? !!meta.publisher.screen : false;\n    const viewingSharedScreen = meta ? meta.subscriber.screen : false;\n    const activeCameraSubscribers = meta ? meta.subscriber.camera : 0;\n    const activeCameraSubscribersGt2 = activeCameraSubscribers > 2;\n    const activeCameraSubscribersOdd = activeCameraSubscribers % 2;\n    const screenshareActive = viewingSharedScreen || sharingScreen;\n\n    return {\n        controlClass: classNames('App-control-container', { hidden: !active }),\n        localAudioClass: classNames('ots-video-control circle audio', {\n            hidden: !active,\n            muted: !localAudioEnabled\n        }),\n        localVideoClass: classNames('ots-video-control circle video', {\n            hidden: !active,\n            muted: !localVideoEnabled\n        }),\n        localCameraClass: classNames('ots-video-control circle camera', {\n            hidden: !active,\n            front: !localCam\n        }),\n        localCallClass: classNames('ots-video-control circle end-call', {\n            hidden: !active\n        }),\n        cameraPublisherClass: classNames('video-container', {\n            hidden: !active,\n            small: !!activeCameraSubscribers || screenshareActive,\n            left: screenshareActive\n        }),\n        screenPublisherClass: classNames('video-container', {\n            hidden: !active || !sharingScreen\n        }),\n        cameraSubscriberClass: classNames(\n            'video-container',\n            { hidden: !active || !activeCameraSubscribers },\n            { 'active-gt2': activeCameraSubscribersGt2 && !screenshareActive },\n            { 'active-odd': activeCameraSubscribersOdd && !screenshareActive },\n            { small: screenshareActive }\n        ),\n        screenSubscriberClass: classNames('video-container', {\n            hidden: !viewingSharedScreen || !active\n        })\n    };\n};\n\nconst connectingMask = () => (\n    <div className=\"App-mask\">\n        <Spinner />\n        <div className=\"message with-spinner\">Connecting</div>\n    </div>\n);\n\nconst loadingMask = () => (\n    <div className=\"App-mask\">\n        <Spinner />\n        <div className=\"message with-spinner\">Connecting</div>\n    </div>\n);\n\nconst startCallMask = start => (\n    <div className=\"App-mask\">\n        <button className=\"message button clickable\" onClick={start}>\n            Click to Start Call{' '}\n        </button>\n    </div>\n);\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            connected: false,\n            active: false,\n            publishers: null,\n            started: true,\n            subscribers: null,\n            meta: null,\n            localAudioEnabled: true,\n            localVideoEnabled: true,\n            localCam: true\n        };\n        this.startCall = this.startCall.bind(this);\n        this.endCall = this.endCall.bind(this);\n        this.toggleLocalAudio = this.toggleLocalAudio.bind(this);\n        this.toggleLocalVideo = this.toggleLocalVideo.bind(this);\n        this.switchLocalCamera = this.switchLocalCamera.bind(this);\n    }\n\n    componentDidMount() {\n        if (otCoreOptions.credentials.token === null) {\n            // console.log('Token is not Present');\n        }\n\n        otCoreOptions.credentials.apiKey = getQueryString('apiKey'); // returns 'apiKey'\n        otCoreOptions.credentials.sessionId = getQueryString('sessionId'); // returns 'sessionId'\n        otCoreOptions.credentials.token = getQueryString('token'); // returns token\n        otCoreOptions.textChat.name = getQueryString('name'); // returns name\n        otCore = new AccCore(otCoreOptions);\n\n        otCore.connect().then(() => this.setState({ connected: true }));\n        const events = [\n            'subscribeToCamera',\n            'unsubscribeFromCamera',\n            'subscribeToScreen',\n            'unsubscribeFromScreen',\n            'startScreenShare',\n            'endScreenShare'\n        ];\n\n        events.forEach(event =>\n            otCore.on(event, ({ publishers, subscribers, meta }) => {\n                this.setState({ publishers, subscribers, meta });\n            })\n        );\n    }\n\n    startCall() {\n        this.setState({ started: false });\n        otCore\n            .startCall()\n            .then(({ publishers, subscribers, meta, started }) => {\n                this.setState({\n                    publishers,\n                    subscribers,\n                    meta,\n                    started: false,\n                    active: true\n                });\n            })\n            .catch(error => console.log(error));\n    }\n\n    endCall() {\n        otCore.endCall();\n        this.setState({ active: false, started: true });\n    }\n\n    toggleLocalAudio() {\n        otCore.toggleLocalAudio(!this.state.localAudioEnabled);\n        this.setState({ localAudioEnabled: !this.state.localAudioEnabled });\n    }\n\n    toggleLocalVideo() {\n        otCore.toggleLocalVideo(!this.state.localVideoEnabled);\n        this.setState({ localVideoEnabled: !this.state.localVideoEnabled });\n    }\n\n    switchLocalCamera() {\n        populateDeviceSources();\n        // otCore.switchLocalCamera(!this.state.localCam);\n        this.setState({ localCam: !this.state.localCam });\n    }\n\n    render() {\n        const { connected, active, started } = this.state;\n        const {\n            localAudioClass,\n            localVideoClass,\n            localCallClass,\n            //   localCameraClass, // IN DEVELOPMENT for multi camerA\n            controlClass,\n            cameraPublisherClass,\n            screenPublisherClass,\n            cameraSubscriberClass,\n            screenSubscriberClass\n        } = containerClasses(this.state);\n\n        return (\n            <div className=\"App\">\n                {/* Removed Header Due to webview\n                    <div className=\"App-header\">\n                    <img src={logo} className=\"App-logo\" alt=\"logo\" />\n                    <h1>Seers Tech Telemedicine</h1>\n                </div> */}\n                <div className=\"App-main\">\n                    <div className=\"App-video-container\">\n                        {!connected && connectingMask()}\n                        {connected && !started && !active && loadingMask()}\n                        {connected && !active && started && startCallMask(this.startCall)}\n                        \n                        <div\n                            id=\"cameraPublisherContainer\"\n                            className={cameraPublisherClass}\n                        />\n                        <div\n                            id=\"screenPublisherContainer\"\n                            className={screenPublisherClass}\n                        />\n                        <div\n                            id=\"cameraSubscriberContainer\"\n                            className={cameraSubscriberClass}\n                        />\n                        <div\n                            id=\"screenSubscriberContainer\"\n                            className={screenSubscriberClass}\n                        />\n                        <div\n                            id=\"chat\"\n                            // className=\"App-chat-container\"\n                            className=\"ots-text-chat\"\n                        />\n                        <div id=\"controls\" className={controlClass}>\n                            {/* Was Working on Camera Switching\n                            <div className={localCameraClass}\n                            onClick={this.switchLocalCamera}\n                        /> */}\n                            <div\n                                className={localAudioClass}\n                                onClick={this.toggleLocalAudio}\n                            />\n                            <div\n                                className={localVideoClass}\n                                onClick={this.toggleLocalVideo}\n                            />\n                            <div\n                                className={localCallClass}\n                                onClick={this.endCall}\n                            />\n                            {/* Was Working on Camera Switching\n                            <label htmlFor=\"video-source-select\">\n                            Video Source:\n                        </label>\n                        <select id=\"video-source-select\" /> */}\n                            {/* <button id=\"cycle-video-btn\" type=\"button\">\n                            Cycle Video\n                        </button> */}\n                            {/* <br /> */}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}